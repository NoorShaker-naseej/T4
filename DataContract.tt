<#@ template hostSpecific="true"#>
<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ assembly name="System.IO" #>
<#@ assembly name="System.Data" #>
<#@ assembly name="System.Configuration" #>
<#@ assembly name="Microsoft.SqlServer.ConnectionInfo" #>
<#@ assembly name="Microsoft.SqlServer.Smo" #>
<#@ assembly name="Microsoft.SqlServer.Management.Sdk.Sfc" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Configuration" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Microsoft.SqlServer.Management.Smo" #>
<#@ import namespace="Microsoft.SqlServer.Management.Common" #>
<#@ import namespace="System.Data.Common" #>
<#@ output extension="/" #>
<#@include file="Manager.ttinclude"#>

<#

string path= "D:/VS Workspace/Shomoos/Common/Registration.DAL";
var manager = Manager.Create(Host, GenerationEnvironment);
string  fileName =null;
string[] lines;
string entityName="";
List<string>properties=new List<string>();
string [] test=null;

var hostServiceProvider = (IServiceProvider)Host;
var dte = (EnvDTE.DTE)hostServiceProvider.GetService(typeof(EnvDTE.DTE));
var activeSolutionProjects = (Array)dte.ActiveSolutionProjects;
var dteProject = (EnvDTE.Project)activeSolutionProjects.GetValue(0);
string defaultNamespace = dteProject.Properties.Item("DefaultNamespace").Value.ToString();
string [] rootNameSpace=defaultNamespace.Split('.');

#>
<#
	//you have to change this path to your EF path 
foreach(string dirFile in Directory.GetFiles(path))
{
	fileName=Path.GetFileNameWithoutExtension(dirFile);
	if(dirFile.Contains(rootNameSpace[0]+"Model")||fileName.StartsWith("vw_")||fileName.EndsWith(".DAL")||dirFile.EndsWith(".config")||dirFile.Contains("Metadata")||dirFile.Contains("diagram")||dirFile.Contains(".Designer")||dirFile.EndsWith("tt")||dirFile.EndsWith("diagram")||dirFile.Contains(".Context")||dirFile.Contains("DBModel")||dirFile.Contains("edmx")||dirFile.Contains("Context")){
	continue;
	}
	

	manager.StartNewFile(fileName+"DC.cs");
	//string[] lines = File.ReadAllLines(path+"/"+Directory.GetFiles(dirFile )+".cs"); 
	lines = File.ReadAllLines(dirFile);
	 
	#>
	using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;


	namespace <#=defaultNamespace#>
	{
	    [DataContract]
	<#foreach(string line in lines ){//close
	if(!(string.IsNullOrWhiteSpace(line))&&!(line.Contains("[System.Diagnostics.CodeAnalysis"))&&!(line.Contains("//"))&&!(line.Contains("namespace"))&&!(line.Contains("this"))&&!(line.Contains("()"))&&!(line.Contains("using"))&&!(line.StartsWith("{"))&&!(line.StartsWith("}"))&&!(line.Contains("IsDeleted"))&&!(line.Contains("ModifiedBy"))&&!(line.Contains("ModifiedOn"))&&!(line.Contains("CreatedBy"))&&!(line.Contains("CreatedOn"))&&!(line.Contains("BearerToken"))&&!(line.Contains("TokenID"))){
	if(line.Contains("[System.Diagnostics.CodeAnalysis")){#>
	<#=line#>
	<#
   }
	if(line.Contains("partial class")){
	#>
	<#=line.TrimStart(' ')#>DC : BaseDC
	    {
	    public <#=fileName#>DC(){}
	<#
	}#>
	
	 <#
	//if(!(line.Contains("partial class")&&line.Contains("namespace")&&line.Contains("using")&&line.Contains("//")&&line.Contains("{")&&line.Contains("}"))){
	if(line.Contains("{ get; set; }")){#>
	[DataMember]	
	<#if(line.Contains("virtual ICollection")){
	string [] collection= line.Split(' ');
	string [] eName={};
	string className="";
	string returnLine="    public virtual ";
	for(int i=0;i<collection.Length;i++)
	{
		if(collection[i].Contains("ICollection"))
		{
			eName=collection[i].Split('>');
			break;
		}
		else 
        {

        }
	}
	for(int s=0;s<eName.Length;s++)
	{
		if(s!=eName.Length-1){
		if(eName[s+1]==" ")
        {
			eName[s]=eName[s]+"DC";
			break;
    }
    }
    }
	for(int i=0;i<eName.Length;i++)
	{
		
		returnLine=returnLine+eName[i];
	}
	returnLine=returnLine+"DC>"+ returnLine.Substring(31)+"s"+"{ get; set; }";

	#>

	<#=returnLine#>
	<#}
	else if(line.Contains("virtual"))
    {
		string [] collections= line.Split(' ');
		string className=collections[2];
		string toReturn="";
		for(int i=0;i<collections.Length;i++)
        {
			
			if(i!=0)
            {
			if(collections[i-1]=="virtual")
            {
				toReturn=toReturn+" "+collections[i]+"DC";
				entityName=collections[i]+"DC";
			}
			else
            {
				toReturn=toReturn+" "+collections[i];
            }
            }
        }#>
	
	<#=toReturn.Substring(4)#>
	<#}
	else if(!(line.Contains("virtual ICollection")))
    {
	#>
	<#=line.Substring(8)#>
	<#}#>
	<#
   // int i=0;
    // lines[i]=line;
   }
    }
   }
	#>


 
}

}
   



<#
}
manager.Process(true);
#>

